#!/bin/sh

# Acorn firewall shell script

IPT="iptables"

SPAMLIST="blockedip"

SPAMDROPMSG="BLOCKED IP DROP"

SYSCTL="sysctl -w"

BLOCKEDIPS="/data/blocked.ips.txt"
#
# interface connected to the Internet 
PUB_IF="agl0"
# Stop certain attacks

echo "Setting sysctl IPv4 settings..."

$SYSCTL net.ipv4.conf.all.send_redirects=0 &> /dev/null

$SYSCTL net.ipv4.conf.default.send_redirects=0 &> /dev/null

$SYSCTL net.ipv4.conf.all.accept_source_route=0 &> /dev/null

$SYSCTL net.ipv4.conf.all.accept_redirects=0 &> /dev/null

$SYSCTL net.ipv4.conf.all.secure_redirects=0 &> /dev/null

$SYSCTL net.ipv4.conf.all.log_martians=0 &> /dev/null

$SYSCTL net.ipv4.conf.default.accept_source_route=0 &> /dev/null

$SYSCTL net.ipv4.conf.default.accept_redirects=0 &> /dev/null

$SYSCTL net.ipv4.conf.default.secure_redirects=0 &> /dev/null

# Ignore all ICMP ECHO and TIMESTAMP requests sent to it via broadcast/multicast
$SYSCTL net.ipv4.icmp_echo_ignore_broadcasts=1 &> /dev/null


# Prevent against the common 'syn flood attack'
$SYSCTL net.ipv4.tcp_syncookies=1 &> /dev/null
$SYSCTL net.ipv4.tcp_timestamps=1 &> /dev/null

# Enable source validation by reversed path, as specified in RFC1812
$SYSCTL net.ipv4.conf.all.rp_filter=1 &> /dev/null
$SYSCTL net.ipv4.conf.default.rp_filter=1 &> /dev/null

#Using Kernel Security Mechanisms
#$SYSCTL kernel.exec-shield=1
$SYSCTL kernel.randomize_va_space=1 &> /dev/null

# $SYSCTL net.ipv4.conf.agl0.forwarding=0 &> /dev/null
$SYSCTL net.ipv4.tcp_max_syn_backlog=2048 &> /dev/null
$SYSCTL net.ipv4.tcp_syn_retries=3 &> /dev/null

 
echo "Starting IPv4 Firewall..."
$IPT -F
$IPT -X
$IPT -t nat -F
$IPT -t nat -X
$IPT -t mangle -F
$IPT -t mangle -X

# load modules
modprobe ip_conntrack
modprobe ipt_hashlimit 
modprobe ipt_comment 
modprobe ipt_recent
modprobe xt_tcpudp
modprobe xt_nat
modprobe ipt_addrtype
modprobe xt_psd
modprobe ipt_multiport 
modprobe ipt_iprange
modprobe ipt_mac
modprobe ipt_pkttype
modprobe ipt_time
modprobe ipt_u32
modprobe ipt_conntrack 
modprobe ip_conntrack
modprobe nfct-helper-ftp 
modprobe nfct-helper-tftp 
modprobe ipt_NFQUEUE
modprobe ipt_LOG
modprobe ipt_NFLOG
modprobe ipt_TPROXY
modprobe ipt_SYNPROXY

# modprobe xt_COOKIE
# modprobe xt_syncookie
modprobe xt_land

#set synflood configuration
$SYSCTL net.ipv4.tcp_timestamps=1 &> /dev/null
echo 2000000 > /sys/module/nf_conntrack/parameters/hashsize
sysctl -w net/netfilter/nf_conntrack_max=2000000 &> /dev/null

sysctl -w net.netfilter.nf_conntrack_tcp_loose=0

#Unlimited traffic for loopback
$IPT -A INPUT -i lo -j ACCEPT
$IPT -A OUTPUT -o lo -j ACCEPT

#Unlimited traffic for bond0 
$IPT -A INPUT -i bond0 -j ACCEPT
$IPT -A OUTPUT -o bond0 -j ACCEPT


# DROP all incomming traffic
$IPT -P INPUT DROP
#$IPT -P OUTPUT DROP

# defend rule add to this chain
$IPT -N DEFEND
$IPT -A INPUT -j DEFEND

# default allowed rule add to this chain
$IPT -N DEFAULT
$IPT -A INPUT -j DEFAULT

# Dynamic port add to this chain
$IPT -N PERMIT
$IPT -A INPUT -j PERMIT


# Allow ssh
$IPT -A DEFAULT -p tcp --destination-port 22 -j ACCEPT

# Allow vnc
$IPT -A DEFAULT -p tcp --destination-port 5900 -j ACCEPT

# Allow http / https (open port 80 / 443)
$IPT -A DEFAULT -p tcp --destination-port 80 -j ACCEPT
$IPT -A DEFAULT -p tcp --destination-port 443 -j ACCEPT

# open ntp port (udp 123)
$IPT -A DEFAULT -p udp --destination-port 123 -j ACCEPT

# open tftp port for HA interface
#$IPT -A DEFAULT -i eth7 -p udp --destination-port 69 -j ACCEPT

$IPT -A DEFAULT -p tcp -m state --state RELATED,ESTABLISHED -j ACCEPT
$IPT -A DEFAULT -p udp -m state --state RELATED,ESTABLISHED -j ACCEPT
$IPT -A DEFAULT -p icmp -m state --state RELATED,ESTABLISHED -j ACCEPT

# allow ping
$IPT -A DEFAULT -p icmp -j ACCEPT

##### Add acorn firewall rules below ######

#portscan defend
$IPT -t raw -A PREROUTING -p tcp -m psd -m comment --comment tcp_portscan -j LOG --log-prefix "portscan "
$IPT -t raw -A PREROUTING -p udp -m psd -m comment --comment udp_portscan -j LOG --log-prefix "portscan "

$IPT -t raw -A PREROUTING -p tcp --tcp-flags ALL ALL -m limit --limit 5/s --limit-burst 7 -j LOG --log-level 4 --log-prefix "portscan fullxmas "
$IPT -t raw -A PREROUTING -p tcp --tcp-flags ALL ALL -j DROP  #FullXmas

$IPT -t raw -A PREROUTING -p tcp --tcp-flags SYN,RST SYN,RST -m limit --limit 5/s --limit-burst 7 -j LOG --log-level 4 --log-prefix "portscan synrst "
$IPT -t raw -A PREROUTING -p tcp --tcp-flags SYN,RST SYN,RST -j DROP  #Syn/Rst

#synflood defend 
$IPT -t raw -I PREROUTING -p tcp -m tcp --syn -j CT --notrack
#$IPT -I DEFEND -p tcp -m tcp -m conntrack --ctstate INVALID,UNTRACKED -j SYNPROXY --sack-perm --timestamp --wscale 7 --mss 1460
#$IPT -A DEFEND -m conntrack --ctstate INVALID -m comment --comment synflood_invalid_drop -j LOG --log-prefix "synflood " --log-drop

#udpflood defend
$IPT -t raw -A PREROUTING -p udp -m limit --limit 5000/s --limit-burst 5000 -j ACCEPT
$IPT -t raw -A PREROUTING -p udp -j LOG --log-prefix "udpflood "
$IPT -t raw -A PREROUTING -p udp -j DROP

#icmpflood defend
$IPT -t raw -A PREROUTING -p icmp -m limit --limit 10/s --limit-burst 50 -j ACCEPT
$IPT -t raw -A PREROUTING -p icmp -j LOG --log-prefix "icmpflood "
$IPT -t raw -A PREROUTING -p icmp -j DROP

#land defend
$IPT -t raw -A PREROUTING -i lo -m land -j ACCEPT
$IPT -t raw -A PREROUTING -m land -m comment --comment land_drop -j LOG --log-prefix "land_attack " --log-drop

##### END acorn firewall rules ############


