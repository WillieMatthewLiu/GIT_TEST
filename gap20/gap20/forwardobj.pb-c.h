/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: forwardobj.proto */

#ifndef PROTOBUF_C_forwardobj_2eproto__INCLUDED
#define PROTOBUF_C_forwardobj_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _ForwardObject ForwardObject;


/* --- enums --- */


/* --- messages --- */

struct  _ForwardObject
{
  ProtobufCMessage base;
  int32_t sessionid;
  int32_t cmd;
  /*
   * common data
   */
  char *strdata;
  protobuf_c_boolean has_intdata;
  int32_t intdata;
  protobuf_c_boolean has_buffdata;
  ProtobufCBinaryData buffdata;
  /*
   * 0: request   1: response
   */
  int32_t direction;
};
#define FORWARD__OBJECT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&forward__object__descriptor) \
    , 0, 0, NULL, 0,0, 0,{0,NULL}, 0 }


/* ForwardObject methods */
void   forward__object__init
                     (ForwardObject         *message);
size_t forward__object__get_packed_size
                     (const ForwardObject   *message);
size_t forward__object__pack
                     (const ForwardObject   *message,
                      uint8_t             *out);
size_t forward__object__pack_to_buffer
                     (const ForwardObject   *message,
                      ProtobufCBuffer     *buffer);
ForwardObject *
       forward__object__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   forward__object__free_unpacked
                     (ForwardObject *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*ForwardObject_Closure)
                 (const ForwardObject *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor forward__object__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_forwardobj_2eproto__INCLUDED */
